<ribbon:RibbonWindow xmlns:docking="http://schemas.actiprosoftware.com/winfx/xaml/docking" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RPA_Workbench"
        xmlns:ribbon="http://schemas.actiprosoftware.com/winfx/xaml/ribbon" xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared" xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes" x:Class="RPA_Workbench.MainWindow"
        mc:Ignorable="d"
        Title="RPA Workbench" ApplicationName="RPA Workbench" DocumentName="RPA-Workbench"  Height="582.649" Width="933.5" WindowStartupLocation="CenterScreen" WindowState="Maximized" Closing="RibbonWindow_Closing">
    <Window.Resources>
        <!-- Styles for Backstage content -->

        <Style x:Key="ContentBoxBorderStyle" TargetType="{x:Type Border}">
            <!--
			<Setter Property="Background" Value="#b0ffffff" />
			<Setter Property="BorderBrush" Value="#ffffff" />
			<Setter Property="BorderThickness" Value="1" />
			-->
            <Setter Property="Padding" Value="7" />
            <Setter Property="VerticalAlignment" Value="Top" />
        </Style>

        <LinearGradientBrush x:Key="DottedHorizontalSeparatorBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#c7c8c9" Offset="0.5" />
            <GradientStop Color="Transparent" Offset="0.501" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="LargeVerticalSeparatorBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#00d7d7d7" Offset="0" />
            <GradientStop Color="#d7d7d7" Offset="0.1" />
            <GradientStop Color="#d7d7d7" Offset="0.9" />
            <GradientStop Color="#00d7d7d7" Offset="1" />
        </LinearGradientBrush>
        <!--<CornerRadius x:Key="{x:Static themes:AssetResourceKeys.ButtonBorderNormalCornerRadiusKey}">10</CornerRadius>-->
        <Style TargetType="{x:Type TreeViewItem}" x:Key="CategoryItemStyled">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Green"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TreeViewItem}" x:Key="ToolItemStyled">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="GreenYellow"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Blue"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <themes:WindowChrome.Chrome>
        <themes:WindowChrome x:Name="WindowChromeCurrent" TitleBarMergeKind="Full"
							 TitleBarHeaderAlignment="Center"
							 HasMaximizeButton="True"
							 HasMinimizeButton="True"
							 HasOuterGlow="True"
							 HasTitleBar="True" 
							 TitleBarHeaderMargin="20,0"                             
		>
            <themes:WindowChrome.TitleBarHeaderTemplate>
                <DataTemplate>
                    <shared:PopupButton MaxWidth="300" Content="{Binding}" DisplayMode="Merged" 
										Style="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonBaseStyleKey}}" 
										Foreground="{Binding (TextElement.Foreground), RelativeSource={RelativeSource TemplatedParent}}"
										IsTabStop="False" Focusable="False">
                        <shared:PopupButton.ContentTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <ContentPresenter DockPanel.Dock="Right" Margin="5,2,0,0" ContentTemplate="{StaticResource {x:Static themes:SharedResourceKeys.DropDownArrowGlyphTemplateKey}}" VerticalAlignment="Center" />
                                    <TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
                                </DockPanel>
                            </DataTemplate>
                        </shared:PopupButton.ContentTemplate>
                        <shared:PopupButton.PopupMenu>
                            <ContextMenu>
                                <MenuItem Header="Save" />
                                <MenuItem Header="Save As..." />
                                <Separator />
                                <MenuItem Header="Close" />
                            </ContextMenu>
                        </shared:PopupButton.PopupMenu>
                    </shared:PopupButton>
                </DataTemplate>
            </themes:WindowChrome.TitleBarHeaderTemplate>
        </themes:WindowChrome>
        <!--<themes:WindowChromeTitleBarMergeKind>Full</themes:WindowChromeTitleBarMergeKind>-->

    </themes:WindowChrome.Chrome>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="484*" />
            <RowDefinition Height="25*"/>
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <DockPanel LastChildFill="True" Grid.RowSpan="3" Grid.ColumnSpan="1">
            <ribbon:Ribbon x:Name="MainRibbon" VerticalAlignment="Top" Width="auto" DockPanel.Dock="Top"  IsQuickAccessToolBarCustomizeButtonVisible="False" ApplicationButtonLabel="Home">
                <!--Design Tab-->
                <ribbon:Tab x:Name="RibbonTabDesign" Label="Design">
                    <ribbon:Group Label="Execute" Width="88">
                        <ribbon:SplitButton Command="{Binding Path=SaveWorkflowCommand}" x:Name="btnRibbonSaveButtonParent" Label="Save">
                            <ribbon:SplitButton.ImageSourceLarge>
                                <BitmapImage UriSource="/RPA-Workbench-Revision2;component/1.%20Resources/MainWindow%20Images/Top%20Ribbon%20Images/Save.png" UriCachePolicy="{x:Null}"/>
                            </ribbon:SplitButton.ImageSourceLarge>
                            <ribbon:Menu>
                                <ribbon:Button x:Name="SaveAll" Label="Save All" Command="{Binding Path=SaveAllWorkflowsCommand}">
                                    <ribbon:Button.ImageSourceLarge>
                                        <BitmapImage UriSource="/RPA-Workbench-Revision2;component/1.%20Resources/MainWindow%20Images/Top%20Ribbon%20Images/SaveAll.png" UriCachePolicy="{x:Null}"/>
                                    </ribbon:Button.ImageSourceLarge>
                                </ribbon:Button>
                            </ribbon:Menu>
                        </ribbon:SplitButton>

                        <ribbon:SplitButton Command="{Binding Path=RunProjectFromJsonCommand}"  x:Name="btnRibbonRunButtonParent" Label="Run" ImageSourceSmall="/RPA-Workbench-Revision2;component/1.%20Resources/MainWindow%20Images/Top%20Ribbon%20Images/Run.png" ImageSourceSmallSize="10,10">
                            <ribbon:Menu>
                                <ribbon:Button x:Name="btnRibbonDebugButtonChild" Command="{Binding Path=StartWithDebuggingCommand}" Label="Debug" ImageSourceSmall="/RPA-Workbench-Revision2;component/1.%20Resources/MainWindow%20Images/Top%20Ribbon%20Images/Debug.png" ></ribbon:Button>
                                <ribbon:Button Label="Run Current Flow" Command="{Binding Path=StartWithoutDebuggingCommand}">
                                    <ribbon:Button.ImageSourceSmall>
                                        <BitmapImage x:Name="btnCurrentFlow" UriSource="/RPA-Workbench-Revision2;component/1.%20Resources/MainWindow%20Images/Top%20Ribbon%20Images/Run.png" UriCachePolicy="{x:Null}"/>
                                    </ribbon:Button.ImageSourceSmall>
                                </ribbon:Button>
                            </ribbon:Menu>
                        </ribbon:SplitButton>

                        <ribbon:SplitButton Visibility="Hidden" Command="{Binding Path=AddReferenceCommand}"  x:Name="btnAddReference" Label="Add Package" ImageSourceSmallSize="512,512" ImageSourceSmall="/RPA-Workbench-Revision2;component/1. Resources/MainWindow Images/Top Ribbon Images/AddReference.png">
                            <ribbon:Menu>
                                <ribbon:Button x:Name="btnDeletePackage" Command="{Binding Path=RemoveReferenceCommand}" Label="Remove" ImageSourceSmall="/RPA-Workbench-Revision2;component/1.%20Resources/MainWindow%20Images/Top%20Ribbon%20Images/Debug.png" ></ribbon:Button>
                            </ribbon:Menu>
                        </ribbon:SplitButton>

                    </ribbon:Group>
                </ribbon:Tab>

            </ribbon:Ribbon>
            <!--Docksite-->
            <docking:DockSite x:Name="MainDockSite" MinWidth="925" WindowsDragged="MainDockSite_WindowsDragged">
                <!--AutoHideToolWindows (Bottom)-->
                <docking:DockSite.AutoHideBottomContainers>
                    <docking:ToolWindowContainer x:Name="BottomToolWindowContainer" HasCloseButton="False" CanTabsCloseOnMiddleClick="False">
                        <docking:ToolWindow Name="OutputToolWindow" Title="Output" Content="{Binding OutputView}" ></docking:ToolWindow>
                    </docking:ToolWindowContainer>
                    <docking:ToolWindowContainer x:Name="BottomToolWindowContainers" HasCloseButton="False" CanTabsCloseOnMiddleClick="False">
                        <docking:ToolWindow Name="ErrorListToolWindow" Title="Error List" Content="{Binding ValidationErrorsView}"></docking:ToolWindow>
                    </docking:ToolWindowContainer>
                </docking:DockSite.AutoHideBottomContainers>
                
                <docking:SplitContainer>
                    <!--ToolWindows (Left)-->
                    <docking:ToolWindowContainer x:Name="LeftToolContainer" HasCloseButton="False" CanTabsCloseOnMiddleClick="False" HorizontalContentAlignment="Stretch">
                        <docking:ToolWindow Name="ProjectToolWindow" Title="Project" HorizontalContentAlignment="Stretch" DefaultDockSide="Left"/>
                        <docking:ToolWindow Name="ActivitiesToolWindow" Content="{Binding ActivitiesView}" Title="Activities"/>
                    </docking:ToolWindowContainer>
                    
                    <!--Workspace MDI Host-->
                    <docking:Workspace HorizontalContentAlignment="Stretch">
                        <docking:TabbedMdiHost x:Name="MDIHost" HasTabPinButtons="True" HorizontalContentAlignment="Stretch"/>
                    </docking:Workspace>

                    <!--ToolWindows (Right)-->
                    <docking:ToolWindowContainer x:Name="RightToolContainer" HasCloseButton="False" CanTabsCloseOnMiddleClick="False"  HorizontalContentAlignment="Stretch" >
                        <docking:ToolWindow Name="PropertiesToolWindow"  Title="Properties" Content="{Binding PropertyInspectorView}" />
                        <docking:ToolWindow Name="OutlineToolwindow" Title="Outline" Content="{Binding OutlineView}" />
                        <docking:ToolWindow Name="DebuggerToolWindow" Title="Debug"/>
                    </docking:ToolWindowContainer>
                </docking:SplitContainer>
            </docking:DockSite>
        </DockPanel>
        <shared:PixelSnapper Grid.Row="3" >
            <StatusBar x:Name="Statusbar" FocusManager.IsFocusScope="True">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" MinWidth="150" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>

                <StatusBarItem x:Name="messagePanel" Content="Ready"/>

                <StatusBarItem Grid.Column="1">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock x:Name="linePanel" MinWidth="40" Margin="7,0,7,0" VerticalAlignment="Center" Text="Ln 1" Visibility="Hidden" />
                        <TextBlock x:Name="columnPanel" MinWidth="40" Margin="7,0,7,0" VerticalAlignment="Center" Text="Col 1" Visibility="Hidden"/>
                        <TextBlock x:Name="characterPanel" MinWidth="40" Margin="7,0,7,0" VerticalAlignment="Center" Text="Ch 1" Visibility="Hidden"/>
                        <Label HorizontalAlignment="Right" Foreground="White">VB.NET</Label>
                    </StackPanel>
                   
                </StatusBarItem>

                <!--<StatusBarItem x:Name="overwriteModePanel" Grid.Column="2" Margin="7,0,15,0" Content="INS" />-->
            </StatusBar>
        </shared:PixelSnapper>
    </Grid>
</ribbon:RibbonWindow>
